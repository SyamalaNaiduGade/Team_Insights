﻿@{
    ViewData["Title"] = "Index";
}
@{
    // Retrieve the data passed from the controller
    var topPerformers = ViewData["TopPerformers"] as List<TeamInsights.ViewModels.TopPerformerViewModel>;
}

<div class="container-fluid d-flex">


    <!-- Main Content -->
    <main class="content-panel flex-grow-1 p-4 bg-white rounded-3 shadow-sm ms-3">
        <h1 class="home-header mb-10">Home</h1>
        <div class="home-cards">
            <section class="mb-4">
                <h2 class="h4 fw-bold mb-3">Manager & Leadership Insights</h2>
                <div class="row g-4">
                    <div class="col-12 col-sm-6 col-lg-4">
                        <div class="bg-white shadow-sm rounded-3 p-4">
                            <h3 class="h5 fw-semibold mb-1">Managers</h3>
                            <p><strong>Total: @ViewBag.ManagerCount</strong></p>
                            <a href="@Url.Action("Managers", "Home")" class="btn from-right mt-3">View Managers</a>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-lg-4">
                        <div class="bg-white shadow-sm rounded-3 p-4">
                            <h3 class="h5 fw-semibold mb-1">Employees</h3>
                            <p><strong>Total: @ViewBag.EmployeeCount</strong></p>
                            <a href="@Url.Action("Employees", "Home")" class="btn from-right mt-3">View Employees</a>
                        </div>
                    </div>
                </div>
            </section>
  @*          <form asp-action="Index" method="get" class="mb-4">
    <div class="row g-2 align-items-center">
        <div class="col-auto">
            <label for="roleFilter" class="col-form-label">Filter by Role:</label>
        </div>
        <div class="col-auto">
            <select name="roleFilter" id="roleFilter" class="form-select" onchange="this.form.submit()">
                <option value="">-- All Roles --</option>
                @foreach (var role in (SelectList)ViewData["Roles"])
                {
                    var selected = ViewData["SelectedRole"]?.ToString() == role.Text ? "selected" : "";
                    <option value="@role.Text" selected>@role.Text</option>
                }
            </select>
        </div>
    </div>
</form> *@
            <div class="mt-4">
                <h2>Top 5 Performers</h2>
                <p>
                    <strong>Performance Score Breakdown:</strong>
                    Evaluation Score (50%) | Project Contributions (30%) | Hours Worked (20%)
                </p>
                @if (ViewBag.TopPerformers != null && (ViewBag.TopPerformers as List<TeamInsights.ViewModels.TopPerformerViewModel>).Any())
                {
                    <!-- 1. Top 5 Performers Table -->
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Rank</th>
                                <th>Employee Name</th>
                                <th>Performance Score</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var (performer, index) in (ViewBag.TopPerformers as List<TeamInsights.ViewModels.TopPerformerViewModel>).Select((p, i) => (p, i + 1)))
                            {
                                <tr>
                                    <td>@index</td>
                                    <td>@performer.EmployeeName</td>
                                    <td>@performer.PerformanceScore.ToString("N2")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <!-- 2. Bar Chart for Top Performers -->
                    <div class="mt-3">
                        <canvas id="topPerformersChart"></canvas>
                    </div>
                    <!-- 3. Pie Chart for Performance Breakdown -->
                    <div class="mt-4">
                        <div class="d-flex justify-content-center align-items-center">
                            <div style="flex: 1; max-width: 400px;">
                                <canvas id="performanceBreakdownChart" style="max-height: 300px;"></canvas>
                            </div>
                        </div>
                    </div>
                    <!-- 4. Donut Chart for Role Distribution -->
                    <div class="mt-4">
                        <div class="d-flex justify-content-center align-items-center">
                            <div style="flex: 1; max-width: 400px;">
                                <canvas id="roleDonutChart" style="max-height: 300px;"></canvas>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <p>No performance data available yet.</p>
                }
            </div>

          @*   <div>
            @if (topPerformers != null && topPerformers.Any())
            {
                <section class="mb-5">
                    <h2 class="h4 mb-2">
                        <i class="fas fa-trophy text-warning me-2"></i>Top 5 Performers
                    </h2>
                    <p class="text-muted small mb-3">
                        <i class="fas fa-chart-bar me-1"></i>Score Breakdown: 40% Projects | 30% Evaluations | 20% Skills | 10% Hours
                    </p>
                    <div class="table-responsive">
                        <table class="table table-striped table-hover table-bordered">
                            <thead class="table-light">
                                <tr>
                                    <th scope="col" style="width: 15%;">Rank</th>
                                    <th scope="col">@Html.DisplayNameFor(model => topPerformers.First().EmployeeName)</th>
                                    <th scope="col" style="width: 25%;">@Html.DisplayNameFor(model => topPerformers.First().PerformanceScore)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var performer in topPerformers)
                                {
                                    <tr>
                                        <td>
                                            @if (performer.Rank == 1)
                                            {
                                                <i class="fas fa-medal text-warning me-1"></i> @performer.Rank
                                            }
                                            else if (performer.Rank == 2)
                                            {
                                                <i class="fas fa-medal text-secondary me-1"></i> @performer.Rank
                                            }
                                            else if (performer.Rank == 3)
                                            {
                                                <i class="fas fa-medal" style="color: #CD7F32;"></i> @performer.Rank <!-- Inline style for bronze -->
                                            }
                                            else
                                            {
                                                <span class="badge bg-info text-dark rounded-pill">@performer.Rank</span>
                                            }
                                        </td>
                                        <td>@performer.EmployeeName</td>
                                        <td>@performer.PerformanceScore</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </section>
            }
            else
            {
                <p>No performance data available to determine top performers.</p>
            }
            @* --- End of Top 5 Performers Section --- *@



            @*                      <!-- Quick Project Summary Cards -->
            <section class="mb-4">
            <h2 class="h4 fw-bold mb-3">Quick Project Summary Cards</h2>
            <div class="row g-4">
            <div class="col-12 col-sm-6 col-lg-4">
            <div class="bg-white shadow-sm rounded-3 p-4">
            <h3 class="h5 fw-semibold mb-1">🧠 Predictive Planning</h3>
            <p><strong>Start:</strong> Jan 2024 – <strong>End:</strong> June 2024</p>
            <p><strong>Manager:</strong> Alice Johnson</p>
            <p><strong>Team:</strong> 👥 6 Employees</p>
            <div class="mt-2">
            <div class="progress" style="height: 10px;">
            <div class="progress-bar bg-primary" style="width: 80%;"></div>
            </div>
            <p class="small text-muted mt-1">Progress: 80%</p>
            </div>
            </div>
            </div>
            <div class="col-12 col-sm-6 col-lg-4">
            <div class="bg-white shadow-sm rounded-3 p-4">
            <h3 class="h5 fw-semibold mb-1">🔍 Project Retrospective</h3>
            <p><strong>Start:</strong> March 2024 – <strong>End:</strong> Aug 2024</p>
            <p><strong>Manager:</strong> Brian Carter</p>
            <p><strong>Team:</strong> 👥 5 Employees</p>
            <div class="mt-2">
            <div class="progress" style="height: 10px;">
            <div class="progress-bar bg-success" style="width: 40%;"></div>
            </div>
            <p class="small text-muted mt-1">Progress: 40%</p>
            </div>
            </div>
            </div>
            </div>
            </section>

            <!-- Project Completion Trends Chart Placeholder -->
            <section class="mb-4">
            <h2 class="h4 fw-bold mb-3">📈 Project Performance Trend Over Time</h2>
            <div class="bg-white rounded-3 p-4 shadow-sm text-muted small">
            <canvas id="completionChart" class="w-100" style="height: 250px;"></canvas>
            </div>
            </section>

            <!-- Team Collaboration Insights -->
            <section class="mb-4">
            <h2 class="h4 fw-bold mb-3">🤝 Team Collaboration Insights</h2>
            <div class="row g-4">
            <div class="col-12 col-sm-6 col-lg-4">
            <div class="bg-white shadow-sm rounded-3 p-4">
            <h3 class="h5 fw-semibold mb-1">Most Active Collaborators</h3>
            <ul class="list-unstyled text-muted">
            <li>Michael Lee – 12 Project Contributions</li>
            <li>Sarah Patel – 10 Project Contributions</li>
            <li>David Chen – 9 Project Contributions</li>
            </ul>
            </div>
            </div>
            </div>
            </section>


            <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
            <script>
            document.addEventListener("DOMContentLoaded", function () {
            const ctx = document.getElementById('completionChart').getContext('2d');

            new Chart(ctx, {
            type: 'line',
            data: {
            labels: ['2019', '2020', '2021', '2022', '2023', '2024'],
            datasets: [{
            label: 'Performance Score %',
            data: [45, 60, 70, 75, 82, 90],
            borderColor: '#3B82F6',
            backgroundColor: 'rgba(59, 130, 246, 0.2)',
            borderWidth: 2,
            tension: 0.4,
            fill: true,
            pointBackgroundColor: '#3B82F6',
            pointRadius: 5
            }]
            },
            options: {
            responsive: true,
            maintainAspectRatio: false, // Allows Bootstrap responsiveness
            plugins: {
            legend: {
            display: true,
            position: 'top'
            },
            tooltip: {
            enabled: true
            }
            },
            scales: {
            y: {
            beginAtZero: true,
            max: 100,
            title: {
            display: true,
            text: 'Manager Evaluation Score %'
            }
            },
            x: {
            title: {
            display: true,
            text: 'Year'
            }
            }
            }
            }
            });
            });

            </script> *@
        </div>



    </main>
</div>

@*Graphics*@

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var topPerformersData = @Html.Raw(Json.Serialize(ViewBag.TopPerformers));
            var roleDistributionData = @Html.Raw(Json.Serialize(ViewBag.RoleDistribution));
            // 1. Bar Chart for Top Performers
            if (topPerformersData && topPerformersData.length > 0) {
                var barChartLabels = topPerformersData.map(function (performer) {
                    return performer.employeeName;
                });
                var barChartScores = topPerformersData.map(function (performer) {
                    return performer.performanceScore;
                });
                var darkBarColors = [
                    'rgba(176, 47, 21, 0.8)',
                    'rgba(242, 211, 7, 0.8)',
                    'rgba(21, 87, 115, 0.8)',
                    'rgba(113, 115, 21, 0.8)',
                    'rgba(163, 20, 91, 0.8)'
                ];
                var barChartBackgroundColors = barChartScores.map(function (score, index) {
                    return darkBarColors[index % darkBarColors.length];
                });
                var barChartBorderColors = barChartBackgroundColors.map(color => color.replace('0.8', '1'));
                var barChartCtx = document.getElementById('topPerformersChart').getContext('2d');
                var topPerformersChart = new Chart(barChartCtx, {
                    type: 'bar',
                    data: {
                        labels: barChartLabels,
                        datasets: [{
                            label: 'Performance Score',
                            data: barChartScores,
                            backgroundColor: barChartBackgroundColors,
                            borderColor: barChartBorderColors,
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: { beginAtZero: true, title: { display: true, text: 'Performance Score' } },
                            x: { title: { display: true, text: 'Employee Name' } }
                        },
                        plugins: {
                            legend: { display: false },
                            title: { display: true, text: 'Top 5 Performers - Performance Scores', font: { size: 16 } }
                        }
                    }
                });
                // 2. Pie Chart for Performance Breakdown
                var pieChartCtx = document.getElementById('performanceBreakdownChart').getContext('2d');
                var performanceBreakdownChart = new Chart(pieChartCtx, {
                    type: 'pie',
                    data: {
                        labels: ['Evaluation Score (50%)', 'Project Contributions (30%)', 'Hours Worked (20%)'],
                        datasets: [{
                            data: [50, 30, 20],
                            backgroundColor: [
                                'rgba(139, 0, 0, 0.8)',  // Dark Red (Evaluation Score)
                                'rgba(255, 255, 0, 0.8)', // Yellow (Project Contributions)
                                'rgba(0, 128, 128, 0.8)' // Teal (Hours Worked)
                            ],
                            borderColor: [
                                'rgba(139, 0, 0, 1)',
                                'rgba(255, 255, 0, 1)',
                                'rgba(0, 128, 128, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'right',
                                labels: {
                                    boxWidth: 20,
                                    padding: 15,
                                    font: { size: 12 }
                                }
                            },
                            title: {
                                display: true,
                                text: 'Overall Performance Score Breakdown',
                                font: { size: 16 },
                                padding: { bottom: 20 }
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        var label = context.label || '';
                                        if (context.parsed !== null) {
                                            label += ': ' + context.parsed + '%';
                                        }
                                        return label;
                                    }
                                }
                            }
                        },
                        layout: {
                            padding: { right: 20 }
                        }
                    }
                });
                // 3. Donut Chart for Role Distribution
                if (roleDistributionData && roleDistributionData.length > 0) {
                    var donutChartCtx = document.getElementById('roleDonutChart').getContext('2d');
                    var roleDonutChart = new Chart(donutChartCtx, {
                        type: 'doughnut',
                        data: {
                            labels: roleDistributionData.map(r => r.roleName),
                            datasets: [{
                                data: roleDistributionData.map(r => r.percentage),
                                backgroundColor: [
                                    'rgba(139, 0, 0, 0.8)',    // Project Manager (Dark Red)
                                    'rgba(255, 255, 0, 0.8)',  // Backend Developer (Yellow)
                                    'rgba(0, 128, 128, 0.8)',  // QA Engineer (Teal)
                                    'rgba(34, 139, 34, 0.8)',  // Database Developer (Green)
                                    'rgba(148, 0, 211, 0.8)',  // UI/UX Designer (Purple)
                                    'rgba(255, 165, 0, 0.8)',  // DevOps Engineer (Orange)
                                    'rgba(147, 112, 219, 0.8)',// Frontend Developer (Light Purple)
                                    'rgba(255, 99, 71, 0.8)',  // Full Stack Developer (Tomato Red)
                                    'rgba(255, 255, 153, 0.8)' // Team Leader (Light Yellow)
                                ],
                                borderColor: [
                                    'rgba(139, 0, 0, 1)',
                                    'rgba(255, 255, 0, 1)',
                                    'rgba(0, 128, 128, 1)',
                                    'rgba(34, 139, 34, 1)',
                                    'rgba(148, 0, 211, 1)',
                                    'rgba(255, 165, 0, 1)',
                                    'rgba(147, 112, 219, 1)',
                                    'rgba(255, 99, 71, 1)',
                                    'rgba(255, 255, 153, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'right',
                                    labels: {
                                        boxWidth: 20,
                                        padding: 15,
                                        font: { size: 12 }
                                    }
                                },
                                title: {
                                    display: true,
                                    text: 'Distribution of Roles Across Employees',
                                    font: { size: 16 },
                                    padding: { bottom: 20 }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function (context) {
                                            var label = context.label || '';
                                            if (context.parsed !== null) {
                                                label += ': ' + context.parsed.toFixed(1) + '%';
                                            }
                                            return label;
                                        }
                                    }
                                }
                            },
                            layout: {
                                padding: { right: 20 }
                            }
                        }
                    });
                }
            }
        });
    </script>
}