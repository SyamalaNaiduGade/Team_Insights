@model List<TeamInsights.ViewModels.SkillCertificationMatrixViewModel>
<h2>Skill, Certification & Role Matrix</h2>
<!-- Filtering & Sorting -->
<form method="get">
    <div class="row mb-3">
        <div class="col-md-3">
            <input type="text" name="searchTerm" placeholder="Search by employee, skill, certification, role, or project" class="form-control" />
        </div>
        <div class="col-md-3">
            <select name="sortBy" class="form-control">
                <option value="">Sort By</option>
                <option value="name">Employee Name</option>
                <option value="skill">Skill Name</option>
                <option value="certification">Certification Name</option>
                <option value="role">Role Name</option>
                <option value="avgEvaluationScore">Average Evaluation Score (Descending)</option>
            </select>
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary">Apply</button>
        </div>
    </div>
</form>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Employee</th>
            <th>Projects</th>
            <th>Roles</th>
            <th>Skills</th>
            <th>Certifications</th>
            @* <th>Contributions Count</th> *@
            <th>Contributions Description</th>
            <th>Average Evaluation Score</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in Model)
        {
            <tr>
                <td>@employee.EmployeeName</td>
                <td>
                    <ul>
                        @foreach (var projectName in employee.ProjectNames)
                        {
                            <li>
                                <span class="badge bg-secondary">@projectName</span>
                            </li>
                        }
                    </ul>
                </td>
                <td>
                    <ul>
                        @foreach (var role in employee.Roles)
                        {
                            <li>
                                <span class="badge bg-info">@role.RoleName</span>
                                @if (role.AssignedDate.HasValue)
                                {
                                    <span> - Assigned: @role.AssignedDate.Value.ToString("yyyy-MM-dd")</span>
                                }
                                <br />
                                <small>
                                    Contributions: @role.RoleContributionsCount<br />
                                    @* Descriptions: @string.Join("; ", role.RoleContributionsDescriptions)<br />
                            Avg. Eval. Score: @(role.AverageEvaluationScore.HasValue ? $"{role.AverageEvaluationScore.Value.ToString("F2")}/100" : "N/A") *@
                                </small>
                            </li>
                        }
                    </ul>
                </td>
                <td>
                    <ul>
                        @foreach (var skill in employee.Skills)
                        {
                            <li>
                                <span class="@GetSkillLevelClass(skill.SkillLevel)">
                                    @skill.SkillName (@skill.SkillLevel)
                                </span> @* - Acquired: @skill.AcquiredDate?.ToString("yyyy-MM-dd") *@
                            </li>
                        }
                    </ul>
                </td>
                <td>
                    <ul>
                        @foreach (var cert in employee.Certifications)
                        {
                            <li>
                                <span class="badge bg-success">@cert.CertificationName</span> @* - Issued: @cert.IssuedDate?.ToString("yyyy-MM-dd") *@
                            </li>
                        }
                    </ul>
                </td>
                @* <td>@employee.ContributionsCount</td> *@
                <td>@string.Join("; ", employee.ContributionsDescriptions)</td>
                <td>@(employee.AverageEvaluationScore.HasValue ? $"{employee.AverageEvaluationScore.Value.ToString("F2")}/100" : "N/A")</td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-between align-items-center mb-3">
    <p>
        <a asp-action="Index" asp-controller="Home" class="btn from-right">Back</a>
    </p>
</div>
<!-- Skill Level Color Coding -->
@functions {
    public string GetSkillLevelClass(string level)
    {
        return level switch
        {
            "Advanced" => "badge bg-warning",
            "Intermediate" => "badge bg-primary",
            "Expert" => "badge bg-danger",
            _ => "badge bg-secondary"
        };
    }
}









